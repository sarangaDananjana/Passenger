# /etc/nginx/nginx.conf

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 65;
  server_tokens off;

  # Optional: websocket upgrade mapping (must be inside http {})
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # ---------- HTTP (80): ACME + redirect to HTTPS ----------
  server {
    listen 80;
    server_name passenger.lk www.passenger.lk;

    client_max_body_size 50m;

    # static collected into /static (shared volume)
    location /static/ {
      alias /static/;
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public";
    }

    # user uploads (MEDIA_URL)
    location /media/ {
      alias /media/;
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public";
    }

    # Allow Let's Encrypt HTTP-01 challenges
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
      allow all;
    }

    # Redirect everything else to HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # ---------- HTTPS (443): proxy to Django/Gunicorn ----------
  server {
    listen 443 ssl http2;
    server_name passenger.lk www.passenger.lk;

    client_max_body_size 50m;

    ssl_certificate     /etc/letsencrypt/live/passenger.lk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/passenger.lk/privkey.pem;
    # (optional, if present)
    # ssl_trusted_certificate /etc/letsencrypt/live/passenger.lk/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Static
    location /static/ {
      alias /static/;
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public";
    }

    # Media
    location /media/ {
      alias /media/;
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public";
    }

    # App
    location / {
      proxy_pass http://django-web:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_read_timeout 60s;
    }
  }
}
